/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  Pacific,
  PacificInterface,
} from "../../../contracts/pacify.sol/Pacific";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "ERC721IncorrectOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ERC721InsufficientApproval",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "approver",
        type: "address",
      },
    ],
    name: "ERC721InvalidApprover",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "ERC721InvalidOperator",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "ERC721InvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "ERC721InvalidReceiver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "ERC721InvalidSender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ERC721NonexistentToken",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_fromTokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_toTokenId",
        type: "uint256",
      },
    ],
    name: "BatchMetadataUpdate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "MetadataUpdate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "string",
        name: "tokenURI",
        type: "string",
      },
    ],
    name: "mintCert",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "searchCert",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferCert",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040518060400160405280600681526020017f50616369667900000000000000000000000000000000000000000000000000008152506040518060400160405280600781526020017f506163696669630000000000000000000000000000000000000000000000000081525081600090816200008f919062000324565b508060019081620000a1919062000324565b5050506200040b565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200012c57607f821691505b602082108103620001425762000141620000e4565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620001ac7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826200016d565b620001b886836200016d565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b600062000205620001ff620001f984620001d0565b620001da565b620001d0565b9050919050565b6000819050919050565b6200022183620001e4565b6200023962000230826200020c565b8484546200017a565b825550505050565b600090565b6200025062000241565b6200025d81848462000216565b505050565b5b8181101562000285576200027960008262000246565b60018101905062000263565b5050565b601f821115620002d4576200029e8162000148565b620002a9846200015d565b81016020851015620002b9578190505b620002d1620002c8856200015d565b83018262000262565b50505b505050565b600082821c905092915050565b6000620002f960001984600802620002d9565b1980831691505092915050565b6000620003148383620002e6565b9150826002028217905092915050565b6200032f82620000aa565b67ffffffffffffffff8111156200034b576200034a620000b5565b5b62000357825462000113565b6200036482828562000289565b600060209050601f8311600181146200039c576000841562000387578287015190505b62000393858262000306565b86555062000403565b601f198416620003ac8662000148565b60005b82811015620003d657848901518255600182019150602085019450602081019050620003af565b86831015620003f65784890151620003f2601f891682620002e6565b8355505b6001600288020188555050505b505050505050565b612440806200041b6000396000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c806370a0823111610097578063b88d4fde11610066578063b88d4fde146102bd578063c87b56dd146102d9578063e985e9c514610309578063f2a46acc1461033957610100565b806370a08231146102235780637e6b11d51461025357806395d89b4114610283578063a22cb465146102a157610100565b806323b872dd116100d357806323b872dd1461019f57806342842e0e146101bb5780636135ccb0146101d75780636352211e146101f357610100565b806301ffc9a71461010557806306fdde0314610135578063081812fc14610153578063095ea7b314610183575b600080fd5b61011f600480360381019061011a9190611898565b610369565b60405161012c91906118e0565b60405180910390f35b61013d6103ca565b60405161014a919061198b565b60405180910390f35b61016d600480360381019061016891906119e3565b61045c565b60405161017a9190611a51565b60405180910390f35b61019d60048036038101906101989190611a98565b610478565b005b6101b960048036038101906101b49190611ad8565b61048e565b005b6101d560048036038101906101d09190611ad8565b610590565b005b6101f160048036038101906101ec9190611ad8565b6105b0565b005b61020d600480360381019061020891906119e3565b6105c0565b60405161021a9190611a51565b60405180910390f35b61023d60048036038101906102389190611b2b565b6105d2565b60405161024a9190611b67565b60405180910390f35b61026d600480360381019061026891906119e3565b61068c565b60405161027a919061198b565b60405180910390f35b61028b61069e565b604051610298919061198b565b60405180910390f35b6102bb60048036038101906102b69190611bae565b610730565b005b6102d760048036038101906102d29190611d23565b610746565b005b6102f360048036038101906102ee91906119e3565b610763565b604051610300919061198b565b60405180910390f35b610323600480360381019061031e9190611da6565b610876565b60405161033091906118e0565b60405180910390f35b610353600480360381019061034e9190611e87565b61090a565b6040516103609190611b67565b60405180910390f35b6000634906490660e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806103c357506103c282610944565b5b9050919050565b6060600080546103d990611f12565b80601f016020809104026020016040519081016040528092919081815260200182805461040590611f12565b80156104525780601f1061042757610100808354040283529160200191610452565b820191906000526020600020905b81548152906001019060200180831161043557829003601f168201915b5050505050905090565b600061046782610a26565b5061047182610aae565b9050919050565b61048a8282610485610aeb565b610af3565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036105005760006040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016104f79190611a51565b60405180910390fd5b6000610514838361050f610aeb565b610b05565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161461058a578382826040517f64283d7b00000000000000000000000000000000000000000000000000000000815260040161058193929190611f43565b60405180910390fd5b50505050565b6105ab83838360405180602001604052806000815250610746565b505050565b6105bb838383610590565b505050565b60006105cb82610a26565b9050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036106455760006040517f89c62b6400000000000000000000000000000000000000000000000000000000815260040161063c9190611a51565b60405180910390fd5b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b606061069782610763565b9050919050565b6060600180546106ad90611f12565b80601f01602080910402602001604051908101604052809291908181526020018280546106d990611f12565b80156107265780601f106106fb57610100808354040283529160200191610726565b820191906000526020600020905b81548152906001019060200180831161070957829003601f168201915b5050505050905090565b61074261073b610aeb565b8383610d1f565b5050565b61075184848461048e565b61075d84848484610e8e565b50505050565b606061076e82610a26565b50600060066000848152602001908152602001600020805461078f90611f12565b80601f01602080910402602001604051908101604052809291908181526020018280546107bb90611f12565b80156108085780601f106107dd57610100808354040283529160200191610808565b820191906000526020600020905b8154815290600101906020018083116107eb57829003601f168201915b505050505090506000610819611045565b9050600081510361082e578192505050610871565b60008251111561086357808260405160200161084b929190611fb6565b60405160208183030381529060405292505050610871565b61086c8461105c565b925050505b919050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6000806007600081548092919061092090612009565b91905055905061093084826110c5565b61093a81846111be565b8091505092915050565b60007f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161480610a0f57507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b80610a1f5750610a1e8261121a565b5b9050919050565b600080610a3283611284565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610aa557826040517f7e273289000000000000000000000000000000000000000000000000000000008152600401610a9c9190611b67565b60405180910390fd5b80915050919050565b60006004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600033905090565b610b0083838360016112c1565b505050565b600080610b1184611284565b9050600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614610b5357610b52818486611486565b5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610be457610b956000856000806112c1565b6001600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825403925050819055505b600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1614610c67576001600360008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b846002600086815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4809150509392505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610d9057816040517f5b08ba18000000000000000000000000000000000000000000000000000000008152600401610d879190611a51565b60405180910390fd5b80600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610e8191906118e0565b60405180910390a3505050565b60008373ffffffffffffffffffffffffffffffffffffffff163b111561103f578273ffffffffffffffffffffffffffffffffffffffff1663150b7a02610ed2610aeb565b8685856040518563ffffffff1660e01b8152600401610ef494939291906120a6565b6020604051808303816000875af1925050508015610f3057506040513d601f19601f82011682018060405250810190610f2d9190612107565b60015b610fb4573d8060008114610f60576040519150601f19603f3d011682016040523d82523d6000602084013e610f65565b606091505b506000815103610fac57836040517f64a0ae92000000000000000000000000000000000000000000000000000000008152600401610fa39190611a51565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161461103d57836040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016110349190611a51565b60405180910390fd5b505b50505050565b606060405180602001604052806000815250905090565b606061106782610a26565b506000611072611045565b9050600081511161109257604051806020016040528060008152506110bd565b8061109c8461154a565b6040516020016110ad929190611fb6565b6040516020818303038152906040525b915050919050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036111375760006040517f64a0ae9200000000000000000000000000000000000000000000000000000000815260040161112e9190611a51565b60405180910390fd5b600061114583836000610b05565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146111b95760006040517f73c6ac6e0000000000000000000000000000000000000000000000000000000081526004016111b09190611a51565b60405180910390fd5b505050565b806006600084815260200190815260200160002090816111de91906122e0565b507ff8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce78260405161120e9190611b67565b60405180910390a15050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b60006002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b80806112fa5750600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614155b1561142e57600061130a84610a26565b9050600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415801561137557508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614155b801561138857506113868184610876565b155b156113ca57826040517fa9fbf51f0000000000000000000000000000000000000000000000000000000081526004016113c19190611a51565b60405180910390fd5b811561142c57838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b836004600085815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505050565b611491838383611618565b61154557600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361150657806040517f7e2732890000000000000000000000000000000000000000000000000000000081526004016114fd9190611b67565b60405180910390fd5b81816040517f177e802f00000000000000000000000000000000000000000000000000000000815260040161153c9291906123b2565b60405180910390fd5b505050565b606060006001611559846116d9565b01905060008167ffffffffffffffff81111561157857611577611bf8565b5b6040519080825280601f01601f1916602001820160405280156115aa5781602001600182028036833780820191505090505b509050600082602001820190505b60011561160d578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a8581611601576116006123db565b5b049450600085036115b8575b819350505050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141580156116d057508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16148061169157506116908484610876565b5b806116cf57508273ffffffffffffffffffffffffffffffffffffffff166116b783610aae565b73ffffffffffffffffffffffffffffffffffffffff16145b5b90509392505050565b600080600090507a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008310611737577a184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000838161172d5761172c6123db565b5b0492506040810190505b6d04ee2d6d415b85acef81000000008310611774576d04ee2d6d415b85acef8100000000838161176a576117696123db565b5b0492506020810190505b662386f26fc1000083106117a357662386f26fc100008381611799576117986123db565b5b0492506010810190505b6305f5e10083106117cc576305f5e10083816117c2576117c16123db565b5b0492506008810190505b61271083106117f15761271083816117e7576117e66123db565b5b0492506004810190505b60648310611814576064838161180a576118096123db565b5b0492506002810190505b600a8310611823576001810190505b80915050919050565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61187581611840565b811461188057600080fd5b50565b6000813590506118928161186c565b92915050565b6000602082840312156118ae576118ad611836565b5b60006118bc84828501611883565b91505092915050565b60008115159050919050565b6118da816118c5565b82525050565b60006020820190506118f560008301846118d1565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561193557808201518184015260208101905061191a565b60008484015250505050565b6000601f19601f8301169050919050565b600061195d826118fb565b6119678185611906565b9350611977818560208601611917565b61198081611941565b840191505092915050565b600060208201905081810360008301526119a58184611952565b905092915050565b6000819050919050565b6119c0816119ad565b81146119cb57600080fd5b50565b6000813590506119dd816119b7565b92915050565b6000602082840312156119f9576119f8611836565b5b6000611a07848285016119ce565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611a3b82611a10565b9050919050565b611a4b81611a30565b82525050565b6000602082019050611a666000830184611a42565b92915050565b611a7581611a30565b8114611a8057600080fd5b50565b600081359050611a9281611a6c565b92915050565b60008060408385031215611aaf57611aae611836565b5b6000611abd85828601611a83565b9250506020611ace858286016119ce565b9150509250929050565b600080600060608486031215611af157611af0611836565b5b6000611aff86828701611a83565b9350506020611b1086828701611a83565b9250506040611b21868287016119ce565b9150509250925092565b600060208284031215611b4157611b40611836565b5b6000611b4f84828501611a83565b91505092915050565b611b61816119ad565b82525050565b6000602082019050611b7c6000830184611b58565b92915050565b611b8b816118c5565b8114611b9657600080fd5b50565b600081359050611ba881611b82565b92915050565b60008060408385031215611bc557611bc4611836565b5b6000611bd385828601611a83565b9250506020611be485828601611b99565b9150509250929050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b611c3082611941565b810181811067ffffffffffffffff82111715611c4f57611c4e611bf8565b5b80604052505050565b6000611c6261182c565b9050611c6e8282611c27565b919050565b600067ffffffffffffffff821115611c8e57611c8d611bf8565b5b611c9782611941565b9050602081019050919050565b82818337600083830152505050565b6000611cc6611cc184611c73565b611c58565b905082815260208101848484011115611ce257611ce1611bf3565b5b611ced848285611ca4565b509392505050565b600082601f830112611d0a57611d09611bee565b5b8135611d1a848260208601611cb3565b91505092915050565b60008060008060808587031215611d3d57611d3c611836565b5b6000611d4b87828801611a83565b9450506020611d5c87828801611a83565b9350506040611d6d878288016119ce565b925050606085013567ffffffffffffffff811115611d8e57611d8d61183b565b5b611d9a87828801611cf5565b91505092959194509250565b60008060408385031215611dbd57611dbc611836565b5b6000611dcb85828601611a83565b9250506020611ddc85828601611a83565b9150509250929050565b600067ffffffffffffffff821115611e0157611e00611bf8565b5b611e0a82611941565b9050602081019050919050565b6000611e2a611e2584611de6565b611c58565b905082815260208101848484011115611e4657611e45611bf3565b5b611e51848285611ca4565b509392505050565b600082601f830112611e6e57611e6d611bee565b5b8135611e7e848260208601611e17565b91505092915050565b60008060408385031215611e9e57611e9d611836565b5b6000611eac85828601611a83565b925050602083013567ffffffffffffffff811115611ecd57611ecc61183b565b5b611ed985828601611e59565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680611f2a57607f821691505b602082108103611f3d57611f3c611ee3565b5b50919050565b6000606082019050611f586000830186611a42565b611f656020830185611b58565b611f726040830184611a42565b949350505050565b600081905092915050565b6000611f90826118fb565b611f9a8185611f7a565b9350611faa818560208601611917565b80840191505092915050565b6000611fc28285611f85565b9150611fce8284611f85565b91508190509392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000612014826119ad565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361204657612045611fda565b5b600182019050919050565b600081519050919050565b600082825260208201905092915050565b600061207882612051565b612082818561205c565b9350612092818560208601611917565b61209b81611941565b840191505092915050565b60006080820190506120bb6000830187611a42565b6120c86020830186611a42565b6120d56040830185611b58565b81810360608301526120e7818461206d565b905095945050505050565b6000815190506121018161186c565b92915050565b60006020828403121561211d5761211c611836565b5b600061212b848285016120f2565b91505092915050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026121967fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82612159565b6121a08683612159565b95508019841693508086168417925050509392505050565b6000819050919050565b60006121dd6121d86121d3846119ad565b6121b8565b6119ad565b9050919050565b6000819050919050565b6121f7836121c2565b61220b612203826121e4565b848454612166565b825550505050565b600090565b612220612213565b61222b8184846121ee565b505050565b5b8181101561224f57612244600082612218565b600181019050612231565b5050565b601f8211156122945761226581612134565b61226e84612149565b8101602085101561227d578190505b61229161228985612149565b830182612230565b50505b505050565b600082821c905092915050565b60006122b760001984600802612299565b1980831691505092915050565b60006122d083836122a6565b9150826002028217905092915050565b6122e9826118fb565b67ffffffffffffffff81111561230257612301611bf8565b5b61230c8254611f12565b612317828285612253565b600060209050601f83116001811461234a5760008415612338578287015190505b61234285826122c4565b8655506123aa565b601f19841661235886612134565b60005b828110156123805784890151825560018201915060208501945060208101905061235b565b8683101561239d5784890151612399601f8916826122a6565b8355505b6001600288020188555050505b505050505050565b60006040820190506123c76000830185611a42565b6123d46020830184611b58565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fdfea26469706673582212205d8998ee4cbeb466eb63f527a4af5edfeb98a0d42d4f73044e38f05962c0d9f264736f6c63430008180033";

type PacificConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PacificConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Pacific__factory extends ContractFactory {
  constructor(...args: PacificConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      Pacific & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Pacific__factory {
    return super.connect(runner) as Pacific__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PacificInterface {
    return new Interface(_abi) as PacificInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Pacific {
    return new Contract(address, _abi, runner) as unknown as Pacific;
  }
}
